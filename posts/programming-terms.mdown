<!--
Categories:
  - programming
Tags:
  - type
  - polymorphism
-->

## References ##

[1]     Computing Surveys, Vol 17 n. 4, pp 471-522, December 1985
        On Understanding Types, Data Abstraction, and Polymorphism
        Luca Cardelli and Peter Wegner


## Runtime Polymorphism ##

## Type Checking ##

- Of variables, constants, operators, variables, function references occurs either at compile time (**statically typed**) or runtime (**dynamically typed**).

"Languages in which all expressions are type-consistent are called strongly typed languages. 
If a language is strongly typed its compiler can guarantee that the programs it accepts will execute without type errors. 
In general, we should strive for strong typing, and adopt static typing whenever possible. 
Note that every statically typed language is strongly typed but the converse is not necessarily true." [1]

## Statically Typed ##

- The majority of type checking is performed at compile time.
- e.g. C++, Java.

## Dynamically Typed ##

- The majority of type checking is performed at run time.
- e.g. Perl, Python, Ruby.

## Strongly Typed ##

- e.g. Python, C++, Java

## Weakly Typed ##

- e.g. Perl
